name: Production Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tags:
        description: "Manual Workflow"
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.event.base_ref, 'refs/heads/master') || github.event_name == 'workflow_dispatch'
    name: Build Go Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Configure Git for private modules
        run: git config --global url."https://${{ secrets.GH_READ_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Build Go application
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -a -o service-${{ matrix.arch }} .

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: service-${{ matrix.arch }}
          path: service-${{ matrix.arch }}

  docker-build:
    name: Build and Push Multi-Arch Image
    runs-on: ubuntu-latest
    needs: build-binaries
    env:
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DEPLOY_ENVIRONMENT: production
    environment: production
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Move binaries to root
        run: |
          mv ./artifacts/service-amd64/service-amd64 ./service-amd64
          mv ./artifacts/service-arm64/service-arm64 ./service-arm64
          ls -la service-*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push the image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./devops/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
